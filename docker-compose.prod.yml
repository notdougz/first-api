version: '3.8'

services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: tarefas-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tarefas_db}
      POSTGRES_USER: ${POSTGRES_USER:-tarefas_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tarefas_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tarefas_user} -d ${POSTGRES_DB:-tarefas_db}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend
  backend:
    build:
      context: ./projeto-tarefas
      dockerfile: Dockerfile
    container_name: tarefas-api
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-tarefas_user}:${POSTGRES_PASSWORD:-tarefas_password}@db:5432/${POSTGRES_DB:-tarefas_db}
      - SECRET_KEY=${SECRET_KEY:-sua_chave_secreta_super_segura}
      - ENVIRONMENT=production
      - DEBUG=False
    volumes:
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tarefas-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: tarefas-network
